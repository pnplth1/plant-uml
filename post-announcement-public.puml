@startuml
'''''''''''''''''''''''''''''''''''''''''''''''''

'''''''''''''''''''''''''''''''''''''''''''''''''
title POST /v1/adm-admin-announcement-service/publish
'''''''''''''''''''''''''''''''''''''''''''''''''
' define diagram participants
'''''''''''''''''''''''''''''''''''''''''''''''''

actor Requestor #80BBEC

box "Admin Panel" #E1FAFD
boundary "adm-admin-announcement-service" as admin_bff #80BBEC
boundary "announcement-service" as admin_svc #80BBEC

'''''''''''''''''''''''''''''''''''''''''''''''''
' formatting options
'''''''''''''''''''''''''''''''''''''''''''''''''
hide footbox

'autonumber

skinparam defaultFontName Comic Sans MS
skinparam sequence {
ParticipantBorderColor black
ParticipantBackgroundColor #A9DCDF
ParticipantFontName Comic Sans MS
ParticipantFontSize 15
ActorBackgroundColor #A9DCDF
ActorBorderColor black
ArrowFontName Comic Sans MS
}

'''''''''''''''''''''''''''''''''''''''''''''''''
' describe sequence of events
'''''''''''''''''''''''''''''''''''''''''''''''''
==  ==

Requestor ->   admin_bff : POST /v1/adm-admin-announcement-service/publish
activate admin_bff

group Section: Validate input fields
    note right of admin_bff
        * Validate Mandatory
        * Validate List of value
    end note
      alt If validation is failure/not pass
    note right of admin_bff
      Hard stop.
      Return HTTP Status = "400" and status.code = "8000"
    end note
  Else Else
    note right of admin_bff
      Continue next step
    end note
  end alt
    end group  
group Section: Extract Header Field: Authorization
  admin_bff -> admin_bff : decrypted Access Token
      alt If decrypt token is failure/not pass
    note right of admin_bff
      Hard stop.
      Return HTTP Status = "200" and status.code = "2405"
    end note
  Else Else
    note right of admin_bff
    <b>Get data from token</b> ,There are below parameter :
       staff_id
    end note
  end alt
end group  



Loop For each request[]
  group Section: Validate and publish announcement
  
     admin_bff -> admin_svc : POST /v1/announcement-service/inquiry (Request 1)
      activate admin_svc
       admin_svc--> admin_bff  : Response (1)
      deactivate admin_svc
    alt If (Response(1): data[].primaryAnnounceId = 0)
           admin_bff -> admin_svc : PATCH /v1/announcement-service/update (Request 1)
      activate admin_svc
       admin_svc--> admin_bff  : Response 
      deactivate admin_svc
          alt If (status.code=0000)
            note right of admin_bff : Continue to loop next list
    else Else
        note right of admin_bff 
        Hard stop. 
        Return HTTP Status = "500" and status.code "9000"
        end note
    end alt  

      else Else if (Response(1): data[].primaryAnnounceId != 0)
      admin_bff -> admin_svc : POST /v1/announcement-service/inquiry (Request 2)
      activate admin_svc
       admin_svc--> admin_bff  : Response (2)
      deactivate admin_svc
      alt If (Data not found)
            note right of admin_bff 
             Hard stop. 
            Return HTTP Status = "404" and status.code "8100"
            end note
          else Else if (Found data)
         alt if (Response(1): data[].status = "TO_UPDATE")
         admin_bff -> admin_svc : PATCH /v1/announcement-service/update (Request 2)
      activate admin_svc
       admin_svc--> admin_bff  : Response 
      deactivate admin_svc
             alt If (status.code=0000)
              admin_bff -> admin_svc : POST /v1/announcement-service/delete (1)
      activate admin_svc
       admin_svc--> admin_bff  : Response 
      deactivate admin_svc
       alt If (status.code=0000)
        note right of admin_bff : Continue to loop next list
       else Else 
        note right of admin_bff 
        Hard stop. 
        Return HTTP Status = "500" and status.code "9000"
        end note
       end alt

    else Else 
        note right of admin_bff 
        Hard stop. 
        Return HTTP Status = "500" and status.code "9000"
        end note
       
   end alt
    else Else if (Response(1): data[].status = "TO_DELETE")
     admin_bff -> admin_svc : POST /v1/announcement-service/delete (2)
      activate admin_svc
       admin_svc--> admin_bff  : Response 
      deactivate admin_svc
       alt If (status.code=0000)
        note right of admin_bff : Proceed to next step
       else Else 
        note right of admin_bff 
        Hard stop. 
        Return HTTP Status = "500" and status.code "9000"
        end note
       end alt
        alt If (Response(2): data[].status = "ACTIVE")
            admin_bff -> admin_svc : PATCH /v1/announcement-service/update (Request 3)
      activate admin_svc
       admin_svc--> admin_bff  : Response 
      deactivate admin_svc
       alt If (status.code=0000)
        note right of admin_bff : Continue to loop next list
       else Else 
        note right of admin_bff 
        Hard stop. 
        Return HTTP Status = "500" and status.code "9000"
        end note
      
        end alt
        else Else
  admin_bff -> admin_svc : POST /v1/announcement-service/delete (3)
      activate admin_svc
       admin_svc--> admin_bff  : Response 
      deactivate admin_svc
       alt If (status.code=0000)
        note right of admin_bff : Continue to loop next list
       else Else 
        note right of admin_bff 
        Hard stop. 
        Return HTTP Status = "500" and status.code "9000"
        end note
        end alt
 
        end alt
    else Else
     note right of admin_bff 
        Hard stop. 
        Return HTTP Status = "500" and status.code "9000"
        end note
    end alt  
    else Else
     note right of admin_bff 
        Hard stop. 
        Return HTTP Status = "500" and status.code "9000"
        end note
  end group  
  else Else
     note right of admin_bff 
        Hard stop. 
        Return HTTP Status = "500" and status.code "9000"
        end note
     end loop
     end alt
     end alt
    
admin_bff --> Requestor : Response
deactivate admin_bff
@enduml